plugins {
    id 'java'
    id 'io.quarkus'
}

group = 'ch.akop'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url "https://maven.pkg.github.com/AndreKoepke/weathercloud"
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("REPO_USERNAME")
            password = project.findProperty("gpr.pass") ?: System.getenv("REPO_TOKEN")

        }
    }
}

dependencies {
    // lombok
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    // quarkus
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-hibernate-orm'
    implementation 'io.quarkus:quarkus-rest-client-jackson'
    implementation 'io.quarkus:quarkus-rest-client'
    implementation 'io.quarkus:quarkus-websockets'
    implementation 'io.quarkus:quarkus-resteasy'
    implementation 'io.quarkus:quarkus-resteasy-jackson'
    implementation 'io.quarkus:quarkus-jdbc-postgresql'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-config-yaml'
    implementation 'io.quarkus:quarkus-spring-data-jpa'
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'

    // misc
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'com.github.pengrad:java-telegram-bot-api:6.3.0'
    implementation 'ch.akop:weathercloud:0.1.1'
    implementation 'net.e175.klaus:solarpositioning:0.1.6'
    implementation 'org.jetbrains:annotations:24.0.0'


    // rxJava
    implementation 'io.reactivex.rxjava3:rxjava:3.1.6'
    implementation 'com.jakewharton.rx3:replaying-share:3.0.0'
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}