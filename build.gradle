//file:noinspection GroovyUnusedAssignment
plugins {
    id 'org.springframework.boot' version '2.7.7'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
    id 'org.graalvm.buildtools.native' version '0.9.18'
}

group = 'ch.akop'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 17
targetCompatibility = 17

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://maven.pkg.github.com/AndreKoepke/weathercloud"
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("REPO_USERNAME")
            password = project.findProperty("gpr.pass") ?: System.getenv("REPO_TOKEN")

        }
    }
}

dependencies {
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // Spring
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'com.zaxxer:HikariCP:5.0.1'

    // misc
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'com.github.pengrad:java-telegram-bot-api:6.3.0'
    implementation 'ch.akop:weathercloud:0.1.1'
    implementation 'net.e175.klaus:solarpositioning:0.0.9'

    // rxJava
    implementation 'io.reactivex.rxjava3:rxjava:3.1.5'
    implementation 'com.jakewharton.rx3:replaying-share:3.0.0'
}

test {
    useJUnitPlatform()
}


tasks.named("bootBuildImage") {
    imageName.set("akop/home-system:native")
    publish = true
    docker {
        publishRegistry {
            username = project.findProperty("docker.user") ?: System.getenv("DOCKER_USER") ?: ""
            password = project.findProperty("docker.pass") ?: System.getenv("DOCKER_PASS") ?: ""
        }
    }
    environment = ['BP_NATIVE_IMAGE': 'true']
}