plugins {
  id 'java'
  id 'io.quarkus' version '2.16.4.Final'
  id "com.gorylenko.gradle-git-properties" version "2.4.1"
}

group = 'ch.akop'
version = '0.0.1-SNAPSHOT'

java {
  sourceCompatibility = JavaVersion.VERSION_21
  targetCompatibility = JavaVersion.VERSION_21
}

try {
  apply from: 'gradle-local.properties'
} catch (Exception e) {
}

repositories {
  mavenCentral()
  mavenLocal()
  maven {
    url "https://maven.pkg.github.com/AndreKoepke/weathercloud"
    credentials {
      username = project.findProperty("repo_user") ?: System.getenv("REPO_USERNAME")
      password = project.findProperty("repo_pass") ?: System.getenv("REPO_TOKEN")
    }
  }
}

dependencies {

  // lombok
  compileOnly 'org.projectlombok:lombok:1.18.34'
  annotationProcessor 'org.projectlombok:lombok:1.18.34'
  testCompileOnly 'org.projectlombok:lombok:1.18.34'
  testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'

  // quarkus
  implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
  implementation 'io.quarkus:quarkus-hibernate-orm'
  implementation 'io.quarkus:quarkus-rest-client-reactive'
  implementation 'io.quarkus:quarkus-rest-client-reactive-jackson'
  implementation 'io.quarkus:quarkus-websockets'
  implementation 'io.quarkus:quarkus-resteasy-reactive'
  implementation 'io.quarkus:quarkus-jdbc-postgresql'
  implementation 'io.quarkus:quarkus-arc'
  implementation 'io.quarkus:quarkus-config-yaml'
  implementation 'io.quarkus:quarkus-spring-data-jpa'
  implementation 'io.quarkus:quarkus-container-image-docker'
  implementation 'io.quarkus:quarkus-scheduler'
  testImplementation 'io.quarkus:quarkus-junit5'
  testImplementation 'io.rest-assured:rest-assured'
  testImplementation 'org.assertj:assertj-core:3.24.2'


  // flyway
  implementation 'io.quarkus:quarkus-flyway'

  // misc
  runtimeOnly 'org.postgresql:postgresql'
  implementation 'javax.validation:validation-api:2.0.1.Final'
  implementation 'com.github.pengrad:java-telegram-bot-api:7.1.0'
  implementation 'ch.akop:weathercloud:0.1.1'
  implementation 'net.e175.klaus:solarpositioning:2.0.2'
  implementation 'org.jetbrains:annotations:24.1.0'
  implementation 'com.squareup.okhttp3:okhttp:4.12.0'
  implementation 'com.google.code.findbugs:jsr305:3.0.2'


  // rxJava
  implementation 'io.reactivex.rxjava3:rxjava:3.1.8'
  implementation 'com.jakewharton.rx3:replaying-share:3.0.0'
  implementation 'io.vertx:vertx-rx-java3:4.5.9'
}

test {
  systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}

compileJava {
  options.encoding = 'UTF-8'
  options.compilerArgs << '-parameters'
}

compileTestJava {
  options.encoding = 'UTF-8'
}

gitProperties {
  dateFormat = "yyyy-MM-dd'T'HH:mm"
}
